name: Artemis Main Actions

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        info:
          - { os: "macos-latest", target: "aarch64-apple-darwin", cross: false }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "windows-latest",
              target: "x86_64-pc-windows-msvc",
              cross: false,
            }
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
          targets: ${{ matrix.info.target }}
      - name: Enable Rust cache
        uses: Swatinem/rust-cache@v2.7.5
        with:
          cache-on-failure: true
      - name: Install just runner
        uses: taiki-e/install-action@just

      - name: Fmt Check
        run: cargo fmt -- --check

      - name: Run clippy
        run: just

      - name: Build tests (macOS)
        if: matrix.info.os == 'macOS-latest'
        run: sudo cargo test --no-run --release
      - name: Run tests (macOS)
        if: matrix.info.os == 'macOS-latest'
        run: sudo cargo test --release

      - name: Setup Rust for root (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" rustup default stable
      
      - name: Build tests (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" cargo test --no-run --release

      - name: Run tests (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" cargo test --release

      - name: Build tests (Windows)
        if: matrix.info.os == 'windows-latest'
        run: cargo test --no-run --release

      - name: Run tests (Windows)
        if: matrix.info.os == 'windows-latest'
        run: cargo test --release
