name: Nightly Release

permissions:
  contents: write

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches:
      - "main"

jobs:
  upload-nightly:
    strategy:
      matrix:
        info:
         # - os: "ubuntu-latest"
         #   target: "aarch64-unknown-linux-gnu"
          - os: "macOS-latest"
            target: "x86_64-apple-darwin"
          - os: "macOS-latest"
            target: "aarch64-apple-darwin"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
    runs-on: ${{ matrix.info.os }}
    steps:
      - name: Setup NodeJS toolchain
        uses: actions/setup-node@v4
      - name: Install TailwindCSS
        run: npm install -D tailwindcss
      - name: Install DaisyUI
        run: npm install -D daisyui@latest
      - name: Install TailwindCSS Typography
        run: npm install -D @tailwindcss/typography
      - name: Add WASM Support
        run: rustup target add wasm32-unknown-unknown
      - name: Setup Auditable
        run: cargo install cargo-auditable

      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@just
      - uses: jetli/trunk-action@v0.5.0
        with:
          version: "latest"

      # Compile WASM before compiling binary
      - if: matrix.info.os == 'windows-latest'
        run: just --shell pwsh.exe --shell-arg -c _wasm
      - if: matrix.info.os != 'windows-latest'
        run: just _wasm

      - name: Build Artemis
        run: just _ci_release ${{ matrix.info.target }}

      - name: Package Artemis
        shell: bash
        env:
          NAME: artemis
          TARGET: ${{ matrix.info.target }}
        run: .github/scripts/package.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "artemis*"
          name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
