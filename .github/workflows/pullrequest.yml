name: Artemis PR Actions

on:
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        info:
          - { os: "macOS-latest", target: "x86_64-apple-darwin", cross: false }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "windows-latest",
              target: "x86_64-pc-windows-msvc",
              cross: false,
            }
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
          targets: ${{ matrix.info.target }}
      - name: Setup NodeJS toolchain
        uses: actions/setup-node@v3
      - name: Install TailwindCSS
        run: npm install -D tailwindcss
      - name: Install DaisyUI
        run: npm install -D daisyui@latest
      - name: Install TailwindCSS Typography
        run: npm install -D @tailwindcss/typography

      - name: Enable Rust cache
        uses: Swatinem/rust-cache@v2.5.0
        with:
          save-if: false
      - name: Fmt Check
        run: cargo fmt -- --check
      - name: Install just runner
        uses: taiki-e/install-action@just
      - name: Install trunk
        uses: jetli/trunk-action@v0.4.0

      - name: Run clippy action to produce annotations on Windows
        if: matrix.info.os == 'windows-latest'
        run: just --shell powershell.exe
      - name: Run clippy action to produce annotations non-Windows
        if: matrix.info.os != 'windows-latest'
        run: just

      - name: Build tests (macOS)
        if: matrix.info.os == 'macOS-latest'
        run: sudo just _pretest
      - name: Run tests (macOS)
        if: matrix.info.os == 'macOS-latest'
        run: sudo just test

      - name: Setup Rust for root (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" rustup default stable
      - name: Build tests (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" just _pretest
      - name: Run tests (Linux)
        if: matrix.info.os == 'ubuntu-latest'
        run: sudo env "PATH=$PATH" just test

      - name: Build tests (Windows)
        if: matrix.info.os == 'windows-latest'
        run: just --shell powershell.exe --shell-arg -c _pretest
      - name: Run tests (Windows)
        if: matrix.info.os == 'windows-latest'
        run: just --shell powershell.exe --shell-arg -c test
