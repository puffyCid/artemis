name: Stable Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  upload-release:
    strategy:
      matrix:
        info:
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - os: "windows-11-arm"
            target: "aarch64-pc-windows-msvc"
    runs-on: ${{ matrix.info.os }}
    steps:
      - name: Setup Stable Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.info.target }}
          components: clippy, rustfmt
      - name: Setup Auditable
        run: cargo install cargo-auditable

      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@just

      - name: Build Artemis
        if: matrix.info.os == 'ubuntu-latest'
        run: just _ci_release ${{ matrix.info.target }}

      - name: Build Artemis
        if: matrix.info.os == 'windows-latest'
        run: just --shell pwsh.exe --shell-arg -c _ci_release ${{ matrix.info.target }}

      - name: Install LLVM on Windows ARM
        if: matrix.info.os == 'windows-11-arm'
        run: winget install llvm --silent --accept-package-agreements

      - name: Build Artemis Windows ARM
        if: matrix.info.os == 'windows-11-arm'
        run: just --shell pwsh.exe --shell-arg -c _ci_release ${{ matrix.info.target }}

      - name: Package Artemis
        shell: bash
        env:
          NAME: artemis
          TARGET: ${{ matrix.info.target }}
        run: .github/scripts/package.sh

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: "artemis*"
          name: "${{ vars.GITHUB_REF_NAME }} - Released!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}